{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/Footer/Footer.js","components/Results/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Form","props","handleSubmit","e","a","preventDefault","fetch","state","url","raw","json","data","headers","forEach","item","key","handleClick","count","results","console","error","urlHandle","target","value","setState","handleMethod","method","onChange","this","type","name","className","placeholder","onClick","React","Component","Footer","Results","src","App","clickHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33792736.chunk.js","sourcesContent":["import './Header.scss'\n\n\nconst Header = ()=>{\n    return(\n    <header>\n       <h1>RESTy</h1>\n     </header>\n    ) \n   }\n\n export default Header;\n","import './Form.scss'\nimport React from 'react'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      url: '',\n      method: 'get',\n    };\n  }\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let raw = await fetch(this.state.url);\n      let data = await raw.json();\n      let headers ={};\n      // console.log(raw.headers);\n      raw.headers.forEach((item,key)=>{\n        return headers[key]=item});\n      this.props.handleClick(headers,data.count,data.results)\n      \n    } catch (error) {\n      console.error(error)\n    }\n\n  }\n  urlHandle = e => {\n    const url = e.target.value;\n    this.setState({ url })\n  }\n  handleMethod = (e) => {\n    const method = e.target.value;\n    this.setState({ method })\n\n    }\n  render() {\n    return (\n      <main>\n        <form>\n          <label>URL: </label>\n          <input  onChange = {this.urlHandle} type=\"url\" name=\"url\" className=\"url\" placeholder=\"Enter request URL\" />\n          <input type=\"submit\" value=\"Go!\" onClick={this.handleSubmit} />\n          <br />\n          <label className=\"methodLabel\">Get</label>\n          <input onChange = {this.handleMethod} type=\"radio\" name=\"method\" className=\"method\" value=\"get\" />\n\n          <label className=\"methodLabel\">Post</label>\n          <input onChange = {this.handleMethod} type=\"radio\" name=\"method\" className=\"method\" value=\"post\" />\n\n          <label className=\"methodLabel\">Put</label>\n          <input onChange = {this.handleMethod} type=\"radio\" name=\"method\" className=\"method\" value=\"put\"  />\n\n          <label className=\"methodLabel\">Delete</label>\n          <input onChange = {this.handleMethod} type=\"radio\" name=\"method\" className=\"method\" value=\"delete\"  />\n        </form>\n        <div>\n          <h3>{this.state.method}&nbsp; &nbsp; &nbsp;{this.state.url}</h3>\n        </div>\n      </main>\n    )\n  }\n}\nexport default Form;\n","import './Footer.scss'\n\nconst Footer = ()=>{\n    return(\n    <footer>\n       <h3>&copy;2018 Code fellows</h3>\n     </footer>\n    ) \n   }\n export default Footer;","import React from 'react';\nimport './Results.scss';\nimport ReactJson from 'react-json-view';\n\n function Results (props) {\n    return (\n        <div className=\"content\">\n            <h2> Results From API:</h2>\n            <br/>\n            <h4> Headers: <ReactJson src={props.headers} /></h4>\n            <h4>Count: {props.count}</h4>\n            <h4>Results:</h4>\n            < ReactJson src={props.results} />\n        </div>\n    )\n}\nexport default Results","\nimport { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Footer from './components/Footer/Footer';\nimport Results from './components/Results/Results';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      headers:{},\n      count: 0,\n      results: []\n    }\n  }\n  clickHandler = (headers,count,results)=>{\n    this.setState({headers,count,results})\n  }\n  render(){\n  return(\n    <>\n    <Header/>\n    <Form handleClick={this.clickHandler}/>\n    <Results headers={this.state.headers} count={this.state.count} results={this.state.results}/>\n    <Footer/>\n    </>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}